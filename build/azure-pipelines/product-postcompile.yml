steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "12.x"

  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
    inputs:
      versionSpec: "1.x"

  - task: AzureKeyVault@1
    displayName: "Azure Key Vault: Get Secrets"
    inputs:
      azureSubscription: "vscode-builds-subscription"
      KeyVaultName: vscode

  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: Compilation
      path: $(Build.ArtifactStagingDirectory)
    displayName: Download compilation output

  - script: |
      set -e
      tar -xzf $(Build.ArtifactStagingDirectory)/compilation.tar.gz
    displayName: Extract compilation output

  - script: |
      set -e
      cat << EOF > ~/.netrc
      machine github.com
      login vscode
      password $(github-distro-mixin-password)
      EOF

      git config user.email "vscode@microsoft.com"
      git config user.name "VSCode"
    displayName: Prepare tooling

  - script: |
      set -e
      git pull --no-rebase https://github.com/$(VSCODE_MIXIN_REPO).git $(node -p "require('./package.json').distro")
    displayName: Merge distro

  - script: |
      npx https://aka.ms/enablesecurefeed standAlone
    displayName: Switch to Terrapin packages
    timeoutInMinutes: 5
    condition: and(succeeded(), eq(variables['ENABLE_TERRAPIN'], 'true'))

  - script: |
      mkdir -p .build
      node build/azure-pipelines/common/computeNodeModulesCacheKey.js $VSCODE_ARCH $ENABLE_TERRAPIN > .build/yarnlockhash
    displayName: Prepare yarn cache flags

  # using `genericNodeModules` instead of `nodeModules` here to avoid sharing the cache with builds running inside containers
  - task: Cache@2
    inputs:
      key: 'genericNodeModules | $(Agent.OS) | .build/yarnlockhash'
      path: .build/node_modules_cache
      cacheHitVar: NODE_MODULES_RESTORED
    displayName: Restore node_modules cache

  - script: |
      set -e
      tar -xzf .build/node_modules_cache/cache.tgz
    condition: and(succeeded(), eq(variables.NODE_MODULES_RESTORED, 'true'))
    displayName: Extract node_modules cache

  - script: |
      set -e
      exit 1
    displayName: Assert node_modules cache was restored
    condition: and(succeeded(), ne(variables.NODE_MODULES_RESTORED, 'true'))

  # Mixin must run before optimize, because the CSS loader will inline small SVGs
  - script: |
      set -e
      node build/azure-pipelines/mixin
    displayName: Mix in quality

  - script: |
      set -e
      yarn npm-run-all -lp hygiene monaco-compile-check valid-layers-check
    displayName: Run hygiene checks
    condition: and(succeeded(), eq(variables['VSCODE_STEP_ON_IT'], 'false'))

  - script: |
      set -e
      AZURE_STORAGE_ACCESS_KEY="$(ticino-storage-key)" \
        node build/azure-pipelines/upload-sourcemaps
    displayName: Upload sourcemaps
    condition: and(succeeded(), ne(variables['VSCODE_PUBLISH'], 'false'))

  - script: |
      set -
      ./build/azure-pipelines/common/extract-telemetry.sh
    displayName: Extract telemetry
    condition: and(succeeded(), ne(variables['VSCODE_PUBLISH'], 'false'))

  - script: |
      set -e
      AZURE_WEBVIEW_STORAGE_ACCESS_KEY="$(vscode-webview-storage-key)" \
        ./build/azure-pipelines/common/publish-webview.sh
    displayName: Publish webview
    condition: and(succeeded(), ne(variables['VSCODE_PUBLISH'], 'false'))
